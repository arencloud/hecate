admin:
  listen: ":9000"
  auth:
    # Option A: Basic
    basic:
      username: "admin"
      password: "s3cr3t"
    # Option B (alternative): bearerToken takes precedence if set
    # bearerToken: "my-admin-token"

proxy:
  enableHTTP3: true               # requires TLS configured
  enableH2C: true                  # allow HTTP/2 cleartext on public listener when TLS is off
  enableUpstreamH2C: true         # allow HTTP/2 cleartext to http:// upstreams

  listen: ":8443"
  http3Listen: ":8444"

  limits:
    rps: 1000
    burst: 2000
    headerBytesCap: 1048576
    bodyBytesCap: 10485760
  health:
    intervalSec: 5
    timeoutSec: 2
    failThreshold: 2
    successReset: 2
  routes:
    - name: api
      hosts: [ "api.example.com" ]
      pathPrefix: "/"
      auth:
        bearerToken: "public-route-token"
      # or
      # auth:
      #   basic:
      #     username: "user"
      #     password: "pass"
      upstreams:
        - "http://192.168.0.17:18080"
        - "http://192.168.0.17:18081"
      lb:
        #algorithm: round_robin - is default
        #algorithm: consistent_hash
        hashKey: X-Hashed-Key   # header or cookie name; falls back to client IP if absent
      stickiness:
        enabled: true
        mode: cookie            # or "header"
        cookieName: hecate_sticky_api
        ttlSeconds: 3600
      policy:
        paths:
          - pathPrefix: "/login"
            rateLimit:
              rps: 5
              burst: 10
              key: "ip"
          - pathPrefix: "/api/"
            rateLimit:
              rps: 100
              burst: 200
              key: "header:X-API-Key"
        #geoIp:
        #  dbPath: "config/GeoLite2-Country.mmdb"
        #  allowCountries: [ "US","DE" ]
        #  cacheTtlSeconds: 600
        #  cacheMaxEntries: 20000
        #asn:
        #  dbPath: "config/GeoLite2-ASN.mmdb"
        #  denyAsn: [ 12345, 64500 ]
        #  cacheTtlSeconds: 600
        #  cacheMaxEntries: 20000
        rateLimit:
          rps: 50
          burst: 100
          key: "header:X-API-Key"
    #- name: web
    #  hosts: ["www.example.com"]
    #  pathPrefix: "/"
    #  upstreams:
    #    - "http://127.0.0.1:18090"
  policy:
    ipAcl:
      allowCidrs: [ "10.0.0.0/8", "192.168.0.0/16" ]   # optional; if present, only these are allowed
      denyCidrs: [ "203.0.113.0/24" ]                 # optional; takes precedence
    rateLimit:
      rps: 200
      burst: 400
      key: "ip"                       # or header:X-API-Key or cookie:session_id
  retry:
    maxRetries: 2
    perTryTimeoutSec: 2
    retryOn5xx: true
    retryOnConnectErr: true
    retryIdempotent: true
    backoffBaseMs: 50
    backoffMaxMs: 500
  circuitBreaker:
    openAfterConsecutiveFailures: 5
    cooldownSec: 30
    halfOpenMaxRequests: 10
  server:
    readHeaderTimeoutSec: 10
    readTimeoutSec: 0
    writeTimeoutSec: 0
    idleTimeoutSec: 90
    maxHeaderBytes: 1048576

tls:
  certFiles: ["config/cert.pem"]
  keyFiles:  ["config/key.pem"]
  # clientCAFile: "config/ca.pem"
  # requireClientCert: false

telemetry:
  serviceName: "hecate"
  otlpEndpoint: "192.168.0.17:4318"   # for OTLP/HTTP receiver (without scheme implies OTLP client default)
  insecure: true                   # if using local collector over HTTP
  sampling: 0.2
